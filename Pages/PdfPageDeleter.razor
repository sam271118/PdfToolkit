@page "/pdfpagedeleter"
@using static Components.ThemeChanger
@using static Components.Deleter.PdfPageDeleter
@using static Components.Deleter.PdfPageDeleterCore
@using static Components.Deleter.PdfPageDeleterValidation
@inject IJSRuntime JSRuntime


<!-- Wrapper -->
<div id="wrapper">

    <!-- Header -->
    <header id="header">

        <h1>X√ìA TRANG PDF</h1>

        @if (! string.IsNullOrEmpty(ThemeIcon))
        {
            <a id="themeSwitch" @onclick="ToggleFullTheme" class="@ThemeIcon" style="margin-top: 1.3em;" title="Thay ƒê·ªïi Ch·ªß ƒê·ªÅ"></a>
        }

    </header>


    <!-- Main -->
    <div style="text-align: center;">

        <section id="intro" class="@SpecialSectionTheme">

            @if (! @IsSubmitComplete)
            {
                <div>

                    <h2>T·∫£i l√™n t·ªáp PDF c·ªßa b·∫°n.</h2>
                    <h4>Gi·ªõi h·∫°n - 1 T·ªáp / 20 MB</h4>

                    <br>

                    <p class="dropzone">
                        <InputFile OnChange="OnInputFileChange" accept="application/pdf" title=""></InputFile>
                        K√©o v√† th·∫£ t·ªáp ho·∫∑c nh·∫•p ƒë·ªÉ t·∫£i l√™n.
                    </p>

                    <p>
                        <h2>@UploadMessage</h2>
                    </p>

                    @if (TotalSize > MaxSizeAllowed || FileType != FileTypeAllowed)
                    {
                        <p>
                            <h2>@UploadErrorMessage</h2>
                            <h1>üò¢</h1>
                        </p>
                    }

                    @if (uploadedFile != null && IsUploadComplete)
                    {
                        <div>

                            <p style="margin: 0.5em;">

                                @uploadedFile.Name &nbsp &nbsp (@TotalPages Trang)
                                <a class="icon solid fas fa-times-circle" title="X√≥a File" @onclick="RemoveImage" style="padding-left: 1em;"></a>

                            </p>

                        </div>
                    }

                    @if (@IsUploadComplete)
                    {
                        <div class="pageno-input">

                            <br>

                            <h3>Nh·∫≠p s·ªë trang. (V√≠ d·ª•: 2) ho·∫∑c ph·∫°m vi s·ªë trang. (V√≠ d·ª•: 2-6):</h3>
                            <input type="text" @bind-value="pageno" @bind-value:event="oninput" placeholder="S·ªë trang." />

                            <br>

                        </div>

                        @if (string.IsNullOrEmpty(pageno))
                        {
                        }
                        else if (! ValidatePageNumber(pageno))
                        {
                            <br>

                            <h2>@PageValidationErrorMessage</h2>
                        }
                        else
                        {
                            <p style="padding-top: 0.75em;">
                                <h2>@SubmitMessage</h2>
                            </p>

                            <p>
                                <button class="button primary large icon solid fas fa-check-circle" @onclick="Submit">G·ª≠i ƒêi</button>
                            </p>
                        }
                    }

                </div>
            }

            @if (@IsDeletionComplete)
            {
                <div>

                    @if (totalPagesToDelete == 1)
                    {
                        <h2>ƒê√£ x√≥a th√†nh c√¥ng @totalPagesToDelete trang kh·ªèi t·ªáp PDF.  ‚úÖ</h2>
                    }
                    else
                    {
                        <h2>ƒê√£ x√≥a th√†nh c√¥ng @totalPagesToDelete trang kh·ªèi t·ªáp PDF.  ‚úÖ</h2>
                    }
                    <h1>üéâ üéä</h1>
                    
                    <br>

                    <p>
                        <button class="button primary large icon solid fas fa-file-download" @onclick="DownloadFile"> T·∫£i Xu·ªëng</button>
                    </p>

                    <p>
                        <a style="cursor: pointer;" class="icon solid fas fa-redo alt" title="L√†m L·∫°i" @onclick="Refresh"></a>
                    </p>

                    <p>
                        <h2>@DownloadMessage</h2>
                    </p>

                </div>
            }

        </section>

    </div>

@* 
    <!-- Footer -->
    <footer id="footer">
        <section style="text-align: center;">
            <img src="../images/square_crop_less.jpg" alt="" style="max-width: 93px; border-radius: 50%;" />
            <h3 style="font-weight: bold;">Subham Karmakar</h3>
            <p>Coding / Programming || Cloud || Software || Computers || Football</p>
            <a href="https://www.subhamk.com" class="button">About Me</a>
            <a href="https://blogs.subhamk.com" class="button">My Blogs</a>
            <a href="https://cheatsheets.subhamk.com" class="button">My CheatSheets</a>
        </section>
        <section>
            <h2 style="text-align: center;">Follow</h2>
            <ul class="icons" style="text-align: center;">
                <li><a href="https://www.twitter.com/SubhamK108" class="icon brands fab fa-twitter alt"></a></li>
                <!-- <li><a href="#" class="icon brands fa-facebook-f alt"></a></li> -->
                <!-- <li><a href="#" class="icon brands fa-instagram alt"></a></li> -->
                <!-- <li><a href="#" class="icon brands fa-linkedin-in alt"></a></li> -->
                <li><a href="https://www.github.com/SubhamK108" class="icon brands fab fa-github alt" title="GitHub"></a></li>
                <li><a href="https://www.hackerrank.com/SubhamK108" class="icon brands fab fa-hackerrank alt" title="HackerRank"></a></li>
                <li><a href="https://www.leetcode.com/SubhamK108" class="icon solid fas fa-code alt" title="LeetCode"></a></li>
            </ul>
        </section>
    </footer> *@


            <section style="text-align: center;">
            <a href="/" class="button">Quay L·∫°i Trang Ch·ªß</a>
        </section>


</div>



@code {
    private IBrowserFile uploadedFile = null;
    private string pageno = string.Empty;
    private int totalPagesToDelete = 0;

    protected override async Task OnInitializedAsync()
    {
        if (IsFirstLoad)
        {
            IsFirstLoad = false;
            await GetThemeIcon();
        }
    }
    
    private async Task GetThemeIcon()
    {
        ThemeIcon = await JSRuntime.InvokeAsync<string>("getCurrentTheme");
    }

    private void ToggleFullTheme()
    {
        JSRuntime.InvokeVoidAsync("toggleBodyTheme", ThemeIcon);
        ToggleTheme();
    }

    private async Task OnInputFileChange(InputFileChangeEventArgs args)
    {
        pageno = string.Empty;
        totalPagesToDelete = 0;
        uploadedFile = null;
        RefreshApp();

        UploadMessage = "T·∫£i l√™n t·ªáp PDF c·ªßa b·∫°n ...  ‚è≥";

        uploadedFile = args.File;
        TotalSize = uploadedFile.Size;
        FileType = uploadedFile.ContentType;

        if (TotalSize > MaxSizeAllowed)
        {
            pageno = string.Empty;
            totalPagesToDelete = 0;
            uploadedFile = null;
            IsUploadComplete = false;
            UploadMessage = "T·∫£i l√™n th·∫•t b·∫°i!  ‚ùå";
            UploadErrorMessage = "K√≠ch th∆∞·ªõc t·ªëi ƒëa ƒë∆∞·ª£c ph√©p cho t·ªáp PDF l√† 20MB!";
            StateHasChanged();
        }

        if (FileType != FileTypeAllowed)
        {
            pageno = string.Empty;
            totalPagesToDelete = 0;
            uploadedFile = null;
            IsUploadComplete = false;
            UploadMessage = "T·∫£i l√™n th·∫•t b·∫°i!  ‚ùå";
            UploadErrorMessage = "B·∫°n ch·ªâ c√≥ th·ªÉ t·∫£i l√™n m·ªôt t·ªáp PDF!";
            StateHasChanged();
        }

        if (FileType == FileTypeAllowed)
        {
            PdfFile = new byte[uploadedFile.Size];
            await uploadedFile.OpenReadStream(MaxSizeAllowed).ReadAsync(PdfFile);
            GetTotalPages();
        }

        if (string.IsNullOrEmpty(UploadErrorMessage))
        {
            if (TotalPages == 1)
            {
                pageno = string.Empty;
                totalPagesToDelete = 0;
                uploadedFile = null;
                IsUploadComplete = false;
                UploadMessage = $"T·ªáp PDF ƒë√≥ ch·ªâ c√≥ trang {TotalPages}, nh∆∞ v·∫≠y l√† kh√¥ng ƒë·ªß! N√≥ ph·∫£i c√≥ √≠t nh·∫•t 2 trang.  üòï";
            }
            else
            {
                IsUploadComplete = true;
                UploadMessage = "ƒê√£ t·∫£i l√™n t·ªáp PDF.  ‚úÖ";
            }
        }
    }

    private async void Submit()
    {
        if (pageno.Contains('-'))
        {
            totalPagesToDelete = Convert.ToInt32(pageno.Split('-')[1]) - Convert.ToInt32(pageno.Split('-')[0]) + 1;
        }
        else
        {
            totalPagesToDelete = 1;
        }
        
        if (totalPagesToDelete == 1)
        {
            SubmitMessage = $"ƒêang x√≥a trang {totalPagesToDelete} kh·ªèi t·ªáp PDF, h√£y ki√™n nh·∫´n ...  ‚è≥";
        }
        else
        {
            SubmitMessage = $"ƒêang x√≥a c√°c trang {totalPagesToDelete} kh·ªèi t·ªáp PDF, h√£y ki√™n nh·∫´n ...  ‚è≥";
        }

        await Task.Delay(100);
        DeletePagesFromPdf(pageno);
        StateHasChanged();
    }

    private async Task SaveAs(string filename, string file)
    {
        await JSRuntime.InvokeVoidAsync("saveAsFile", filename, file);
    }

    private async void DownloadFile()
    {
        string filename = "PageDeleted_PDF";
        DownloadMessage = "B·∫Øt ƒë·∫ßu t·∫£i v·ªÅ ...  ‚è≥";
        await Task.Delay(100);
        await SaveAs(filename, FinalDeletedPdfURL);
        DownloadMessage = "ƒê√£ b·∫Øt ƒë·∫ßu t·∫£i xu·ªëng  ‚úÖ";
        StateHasChanged();
    }

    private void RemoveImage()
    {
        pageno = string.Empty;
        totalPagesToDelete = 0;
        uploadedFile = null;
        UploadMessage = "B·∫°n ƒë√£ x√≥a t·ªáp PDF ƒë√≥! B·∫°n ph·∫£i t·∫£i l√™n l·∫°i.  üòï";
        IsUploadComplete = false;
    }

    private void Refresh()
    {
        pageno = string.Empty;
        totalPagesToDelete = 0;
        uploadedFile = null;
        RefreshApp();
    }
}
